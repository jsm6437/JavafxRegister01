package application;

import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ResourceBundle;

import javax.swing.JOptionPane;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.stage.Stage;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.PasswordField;

import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class MainViewController implements Initializable {
	@FXML
	private TableView<TableModel> tAble;
	@FXML
	private TableColumn<TableModel, String> rID;
	@FXML
	private TableColumn<TableModel, String> rPW;
	@FXML
	private TableColumn<TableModel, String> rPH;
	@FXML
	private TextField ipID;
	@FXML
	private TextField ipPH;
	@FXML
	private PasswordField ipPW;
	@FXML
	private Button Btn_lgn;

	ObservableList<TableModel> oblist = FXCollections.observableArrayList();

	// Event Listener on Button.onAction
	@FXML
	void lgn_Clicked(ActionEvent event) {
		Stage registStage = (Stage) Btn_lgn.getScene().getWindow();
		Stage loginStage = new Stage();
		Parent root;
		
		try {
			
			root = FXMLLoader.load(getClass().getResource("LoginView.fxml"));
			
			Scene scene = new Scene(root);

			loginStage.setTitle("로그인");
			loginStage.setScene(scene);
			loginStage.show();
			
			registStage.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@FXML
	public void getRegister(ActionEvent event) {
		// TODO Autogenerated
		Connection conn = DBConnection.getConnection();

		try {
			String sql = "insert into TEST1 (id,pw,phone) values('";

			sql = sql + ipID.getText() + "','" + ipPW.getText() + "','" + ipPW.getText() + "')";

			conn.createStatement().executeQuery(sql);
			TableModel tmp = new TableModel(ipID.getText(), ipPW.getText(), ipPH.getText());
			JOptionPane.showMessageDialog(null, "유저 등록 성공");

			oblist.add(tmp);

			tAble.setItems(oblist);
			ip_clear();
			conn.close();

		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "아이디 및 비밀번호는 필수입력입니다.");
			ip_clear();
		}

	}

	@FXML
	public void del_Clicked(ActionEvent event) {
		Connection conn = DBConnection.getConnection();
		TableModel selected = tAble.getSelectionModel().getSelectedItem();
		try {
			String sql = "DELETE FROM TEST1 WHERE id ='";

			sql = sql + selected.getId() + "'";

			conn.createStatement().executeQuery(sql);

			oblist.remove(selected);

			JOptionPane.showMessageDialog(null, "유저 삭제 완료.");

			tAble.setItems(oblist);

			conn.close();
		} catch (Exception e) {
			e.printStackTrace();
			JOptionPane.showMessageDialog(null, e);
		}

	}

	public void ip_clear() {
		ipID.clear();
		ipPW.clear();
		ipPH.clear();
	}

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		try {
			Connection conn = DBConnection.getConnection();
			ResultSet rs = conn.createStatement().executeQuery("select * from TEST1 order by id");
			while (rs.next()) {
				oblist.add(new TableModel(rs.getString("id"), rs.getString("pw"), rs.getString("phone")));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		rID.setCellValueFactory(new PropertyValueFactory<>("id"));
		rPW.setCellValueFactory(new PropertyValueFactory<>("pw"));
		rPH.setCellValueFactory(new PropertyValueFactory<>("phone"));

		tAble.setItems(oblist);
	}

}